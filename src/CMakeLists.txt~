
#
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

#
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

# sources
SET( datamanagement_sources

# header files
    ${PROJECT_SOURCE_DIR}/src/dataio.h
    ${PROJECT_SOURCE_DIR}/src/datamanagement.h
    ${PROJECT_SOURCE_DIR}/src/png/lodepng.h

# source files
    ${PROJECT_SOURCE_DIR}/src/dataio.cpp
    ${PROJECT_SOURCE_DIR}/src/datamanagement.cpp
    ${PROJECT_SOURCE_DIR}/src/png/lodepng.cpp
)

# cpprest
FIND_PACKAGE( CPPREST REQUIRED)
IF(CPPREST_FOUND)
    SET(CMAKE_REQUIRED_LIBRARIES ${CPPREST_LIBRARIES})
    INCLUDE_DIRECTORIES(${CPPREST_INCLUDE_DIR})
ENDIF(CPPREST_FOUND)

# gflags
FIND_PACKAGE( GFlags REQUIRED)
IF(GFLAGS_FOUND)
    SET(CMAKE_REQUIRED_LIBRARIES ${GFLAGS_LIBRARIES})
    INCLUDE_DIRECTORIES(${GFLAGS_INCLUDE_DIR})
ENDIF(GFLAGS_FOUND)

# libtiff
FIND_PACKAGE( TIFF REQUIRED)
IF(TIFF_FOUND)
SET(CMAKE_REQUIRED_LIBRARIES ${TIFF_LIBRARIES})
INCLUDE_DIRECTORIES(${TIFF_INCLUDE_DIR})
ENDIF(TIFF_FOUND)

# libpng
FIND_PACKAGE( PNG REQUIRED)
IF(PNG_FOUND)
SET(CMAKE_REQUIRED_LIBRARIES ${PNG_LIBRARIES})
INCLUDE_DIRECTORIES(${PNG_INCLUDE_DIR})
ENDIF(PNG_FOUND)

#
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
SET(CMAKE_CXX_FLAGS "-std=c++11 -O3 -lm -fopenmp" CACHE STRING "CXX Compiler Flags" FORCE)
ADD_DEFINITIONS(-DUse_OpenMP)
ENDIF()

IF(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
SET(CMAKE_CXX_FLAGS "-std=c++11 -O3" CACHE STRING "CXX Compiler Flags" FORCE)
SET(CMAKE_MACOSX_RPATH 1)
ENDIF()

#
ADD_EXECUTABLE(datamanagement ${datamanagement_sources})
TARGET_LINK_LIBRARIES(datamanagement ${CPPREST_LIBRARIES} ${TIFF_LIBRARIES} ${GFLAGS_LIBRARIES} ${PNG_LIBRARIES})

